const express = require('express');
const http = require('http');
const cors = require('cors');
const { Server } = require('socket.io');

const app = express();
app.use(cors());

const server = http.createServer(app);

const io = new Server(server, {
  cors: {
    origin: 'http://localhost:3000', // React dev server
    methods: ['GET', 'POST']
  }
});

io.on('connection', (socket) => {
  console.log('ðŸ”Œ User connected:', socket.id);

  socket.on('send_message', (data) => {
    // Broadcast to all users
    io.emit('receive_messag_
import React, { useEffect, useState } from 'react';
import io from 'socket.io-client';

const socket = io.connect('http://localhost:5000');

function App() {
  const [message, setMessage] = useState('');
  const [chat, setChat] = useState([]);

  const sendMessage = () => {
    if (message.trim()) {
      socket.emit('send_message', { text: message, time: new Date() });
      setMessage('');
    }
  };

  useEffect(() => {
    socket.on('receive_message', (data) => {
      setChat(prev => [...prev, data]);
    });

    return () => {
      socket.off('receive_message');
    };
  }, []);

  return (
    <div style={{ padding: 20 }}>
      <h2>ðŸ’¬ Real-Time Chat</h2>
      <div style={{ border: '1px solid #ccc', padding: 10, height: 300, overflowY: 'scroll' }}>
        {chat.map((msg, idx) => (
          <div key={idx}>
            <strong>{new Date(msg.time).toLocaleTimeString()}:</strong> {msg.text}
          </div>
        ))}
      </div>
      <input
        type="text"
        placeholder="Type message..."
        value={message}
        onChange={e => setMessage(e.target.value)}
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<App />);
